uk <- uk[uk$REGN != "Northern Ireland",]
uk@data <- merge(uk@data, ge2017, by = "PCONCODE")
help(sf::st_sample)
library(tidycensus)
library(tidyverse)
library(tigris)
library(sf)
help(sf::st_sample)
help(st_sample)
library(tidycensus)
library(tidyverse)
library(tigris)
library(sf)
options(tigris_class = "sf")
options(tigris_use_cache = TRUE)
census_api_key("4e9d7fd959555208210856aaa5061b593c3722af")
v15 <- load_variables(2015, "acs5", cache = TRUE)
#acs_16 <- get_acs(geography = "state", table = "B02018",geometry = T)
losangeles_ca <- get_acs(state = "CA", geography = "tract",county = "Los Angeles",
table = "B02001", geometry = TRUE)
losangeles_ca %>% geom_sf()
losangeles_ca %>% ggplot() %>%geom_sf()
library(maptools)
ppl_per_dot <- 50
library(tidycensus)
library(tidyverse)
library(tigris)
library(sf)
options(tigris_class = "sf")
options(tigris_use_cache = TRUE)
census_api_key("4e9d7fd959555208210856aaa5061b593c3722af")
v15 <- load_variables(2015, "acs5", cache = TRUE)
#acs_16 <- get_acs(geography = "state", table = "B02018",geometry = T)
losangeles_ca <- get_acs(state = "CA", geography = "tract",county = "Los Angeles",
table = "B02001", geometry = TRUE)
losangeles_ca %>% ggplot() %>% geom_sf()
losangeles_ca %>% ggplot() %>% geom_sf()
losangeles_ca %>% ggplot()+ geom_sf()
losangeles_ca %>% ggplot()+ geom_sf(color="blue")
riverside_ca <- get_acs(state = "CA", geography = "block",county = "Riverside",
table = "B02001", geometry = TRUE)
riverside_ca <- get_acs(state = "CA", geography = "block",county = "Riverside",
table = "B02001", geometry = TRUE)
riverside_ca <- get_acs(state = "CA", geography = "block",county = "riverside",
table = "B02001", geometry = TRUE)
riverside_ca <- get_acs(state = "CA", geography = "tract",county = "riverside",
table = "B02001", geometry = TRUE)
metros <- core_based_statistical_areas(cb = TRUE)
View(metros)
metros <- core_based_statistical_areas(cb = TRUE) %>%
filter(GEOID %in% c("40140")) %>%
select(metro_name = NAME)
wc_rent <- st_join(riverside_ca, metros, join = st_within,
left = FALSE)
View(wc_rent)
wc_rent %>% ggplot()+ geom_sf(color="blue")
california_dta <- get_acs(state = "CA", geography = "county",
table = "B02001", geometry = TRUE)
california_dta %>% ggplot()+ geom_sf(color="black") +
head(wc_rent)
california_dta %>% ggplot()+ geom_sf(color="black")
x = st_sfc(st_polygon(list(rbind(c(0,0),c(90,0),c(90,90),c(0,90),c(0,0)))), crs = st_crs(4326))
plot(x, axes = TRUE, graticule = TRUE)
plot(p <- st_sample(x, 1000), add = TRUE)
x2 = st_transform(st_segmentize(x,1e4), st_crs("+proj=ortho +lat_0=30 +lon_0=45"))
g = st_transform(st_graticule(), st_crs("+proj=ortho +lat_0=30 +lon_0=45"))
plot(x2, graticule = g)
View(california_dta)
library(rgdal)
Input<-readOGR(dsn=".", layer="SHAPEFILE")
Input<-readOGR(dsn=".", layer="~/r_scratch/CA_Cities_TIGER2016.shp")
Input<-readOGR(dsn=".", layer="CA_Cities_TIGER2016.shp")
Input<-readOGR("~/r_scratch/CA_Cities_TIGER2016.shp")
california_dta$geometry
library(highcharter
library(highcharter)
library(highcharter)
getContent <- function(url) {
library(httr)
content(GET(url))
}
world <- getContent("https://unpkg.com/us-atlas@1/us/10m.json")
# is text
world <- jsonlite::fromJSON(world, simplifyVector = FALSE)
highchart(type = "map") %>%
hc_chart(backgroundColor = "#161C20") %>%
hc_add_series(world = world, showInLegend = FALSE, nullColor = "#424242",
borderWidth = 0)
highchart(type = "map") %>%
hc_chart(backgroundColor = "#161C20") %>%
hc_add_series(mapData = world, showInLegend = FALSE, nullColor = "#424242",
borderWidth = 0)
world
world <- jsonlite::fromJSON(world, simplifyVector = FALSE)
library("geojsonio")
install.packages("geojsonio")
library("geojsonio")
world <- getContent("https://unpkg.com/us-atlas@1/us/10m.json")
world <- jsonlite::fromJSON(world, simplifyVector = FALSE)
world <- getContent("https://unpkg.com/us-atlas@1/us/10m.json")
getContent <- function(url) {
library(httr)
content(GET(url))
}
world <- getContent("https://unpkg.com/us-atlas@1/us/10m.json")
ausgeojson <- getContent("https://raw.githubusercontent.com/johan/world.geo.json/master/countries/AUS.geo.json")
getContent <- function(url) {
library(httr)
content(GET(url),as = "raw")
}
world <- getContent("https://unpkg.com/us-atlas@1/us/10m.json")
world <- jsonlite::fromJSON(world, simplifyVector = FALSE)
world <- getContent("https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json")
world <- jsonlite::fromJSON(world, simplifyVector = FALSE)
world <- getContent("https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json")
world <- jsonlite::fromJSON(world, simplifyVector = FALSE)
world<- fromJSON( file = "r_scratch/10m.json" )
library(rjson)
world<- fromJSON( file = "r_scratch/10m.json" )
world <- jsonlite::fromJSON(world, simplifyVector = FALSE)
url <- "https://unpkg.com/us-atlas@1/us/10m.json"
topojson_read(url)
tmp<- topojson_read(url)
tmp<- geojson_list(tmp)
highchart(type = "map") %>%
hc_chart(backgroundColor = "#161C20") %>%
hc_add_series(mapData = tmp, showInLegend = FALSE, nullColor = "#424242",
borderWidth = 0)
highchart(type = "map") %>%
hc_chart() %>%
hc_add_series(mapData = tmp, showInLegend = FALSE, nullColor = "#424242",
borderWidth = 0)
highchart(type = "map") %>%
hc_chart(backgroundColor = "#161C20") %>%
hc_add_series(mapData = tmp, showInLegend = FALSE, nullColor = "#424242",
borderWidth = 0)
library(tidycensus)
library(tidyverse)
library(tigris)
library(sf)
options(tigris_class = "sf")
options(tigris_use_cache = TRUE)
census_api_key("4e9d7fd959555208210856aaa5061b593c3722af")
v15 <- load_variables(2015, "acs5", cache = TRUE)
#acs_16 <- get_acs(geography = "state", table = "B02018",geometry = T)
california_dta <- get_acs(state = "CA", geography = "county",
table = "B02001", geometry = TRUE)
california_dta %>% ggplot()+ geom_sf(color="black")
library(tidycensus)
library(tidyverse)
library(tigris)
library(sf)
options(tigris_class = "sf")
options(tigris_use_cache = TRUE)
census_api_key("4e9d7fd959555208210856aaa5061b593c3722af")
v15 <- load_variables(2015, "acs5", cache = TRUE)
#acs_16 <- get_acs(geography = "state", table = "B02018",geometry = T)
california_dta <- get_acs(state = "CA", geography = "county",
table = "B02001", geometry = TRUE)
california_dta %>% ggplot()+ geom_sf(color="black")
st_sample(california_dta$geometry,10,type = "random")
st_sample(california_dta,10,type = "random")
p1 = Polygon([[0,2],[1,3],[2,2]])
p2 = Polygon([[0,0],[0,2],[2,2],[2,0]])
p3 = Polygon([[2,0],[2,3],[3,3],[3,0]])
g = gpd.GeoSeries([p1,p2,p3])
vals = pd.Series([100, 50, 500])
california_dta %>% ggplot()+ geom_sf(color="black")
california_dta %>% ggplot(aes(fill= estimate, color = variable))
library(DT)
library(readxl)
library(tidyverse)
library(highcharter)
main_data <- read_excel('~/ethnic_group_profiles/maindata.xlsx')
statepop<- read_excel('~/ethnic_group_profiles/maindata.xlsx', sheet = "state_pop")
library(DT)
library(readxl)
library(tidyverse)
library(highcharter)
main_data <- read_excel('~/ethnic_group_profiles/maindata.xlsx')
statepop<- read_excel('~/ethnic_group_profiles/maindata.xlsx', sheet = "state_pop")
View(main_data)
statepop_selected<- statepop  %>% select(Geography, "Chinese")
names(statepop_selected)[2]<-"Population"
group_selected <- main_data %>% filter(ethnic_group == "Chinese")
current_group <- group_selected$ethnic_group[1]
knitr::knit_hooks$set(inline = function(x) { if(!is.numeric(x)){ x }else{ prettyNum(round(x,2), big.mark=",", digits=6) } })
hcoptslang <- getOption("highcharter.lang")
hcoptslang$thousandsSep <- ","
options(highcharter.lang = hcoptslang)
topstates<-statepop_selected %>% top_n(5)
largest_state <- topstates$Geography[1]
largest_state_pop <- topstates$Population[1]
largest_state_proportion <- (largest_state_pop/group_selected$asian_alone_pop)*100
main_data<- main_data %>% arrange(asian_alone_pop)
all_butselected<- main_data %>% filter(ethnic_group != current_group)
hchart(all_butselected, "bar", hcaes(x = ethnic_group, y = asian_alone_pop)) %>%
hc_add_theme(hc_theme_flatdark()) %>%
hc_add_series_labels_values(group_selected$ethnic_group, group_selected$asian_alone_pop,type = "bar")%>%
hc_yAxis(title = list(text = "Population"),
labels= list(style =list(color ="#fff", fontSize='12px'))) %>%
hc_xAxis(title = list(text = "Ethnic Group"),
labels= list(style =list(color ="#fff", fontSize='15px'))) %>%
hc_title(text = "Asian American By Detailed Origin",
margin = 20, align = "left",
style = list(color = "#E26069"))%>%
hc_subtitle(text = "(2011-2015 ACS)",
margin = 20, align = "left",
style = list(color = "#E26069")) %>%
hc_chart(backgroundColor ='#262324')
hchart(group_selected, "bar", hcaes(x = ethnic_group, y = asian_alone_pop)) %>%
hc_add_theme(hc_theme_flatdark()) %>%
hc_add_series_labels_values(all_butselected$ethnic_group, all_butselected$asian_alone_pop,type = "bar")%>%
hc_yAxis(title = list(text = "Population"),
labels= list(style =list(color ="#fff", fontSize='12px'))) %>%
hc_xAxis(title = list(text = "Ethnic Group"),
labels= list(style =list(color ="#fff", fontSize='15px'))) %>%
hc_title(text = "Asian American By Detailed Origin",
margin = 20, align = "left",
style = list(color = "#E26069"))%>%
hc_subtitle(text = "(2011-2015 ACS)",
margin = 20, align = "left",
style = list(color = "#E26069")) %>%
hc_chart(backgroundColor ='#262324')
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/ethnic_group_profiles/")
#render your sweet site.
rmarkdown::render_site()
setwd("~/ethnic_group_profiles/")
groups = c("Asian Indian","Bangladeshi","Bhutanese","Burmese","Cambodian",
"Chinese",
"Filipino",
"Hmong",
"Indonesian",
"Japanese",
"Korean",
"Laotian",
"Malaysian",
"Mongolian",
"Nepalese",
"Pakistani",
"Sri Lankan",
"Taiwanese",
"Thai",
"Vietnamese")
for(group in groups)
rmarkdown::render(input = "report_template.Rmd",
output_file = paste0("fact_sheets/",group,".html"),
params = list(group = group)
)
hchart(group_selected, "bar", hcaes(x = ethnic_group, y = asian_alone_pop)) %>%
hc_add_theme(hc_theme_flatdark()) %>%
hc_add_series_labels_values(all_butselected$ethnic_group, all_butselected$asian_alone_pop,type = "bar")%>%
hc_yAxis(title = list(text = "Population"),
labels= list(style =list(color ="#fff", fontSize='11px'))) %>%
hc_xAxis(title = list(text = "Ethnic Group"),
labels= list(style =list(color ="#fff", fontSize='15px'))) %>%
hc_title(text = "Asian American By Detailed Origin",
margin = 20, align = "left",
style = list(color = "#E26069"))%>%
hc_subtitle(text = "(2011-2015 ACS)",
margin = 20, align = "left",
style = list(color = "#E26069")) %>%
hc_chart(backgroundColor ='#262324')
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/ethnic_group_profiles/")
#render your sweet site.
rmarkdown::render_site()
setwd("~/ethnic_group_profiles/")
groups = c("Asian Indian","Bangladeshi","Bhutanese","Burmese","Cambodian",
"Chinese",
"Filipino",
"Hmong",
"Indonesian",
"Japanese",
"Korean",
"Laotian",
"Malaysian",
"Mongolian",
"Nepalese",
"Pakistani",
"Sri Lankan",
"Taiwanese",
"Thai",
"Vietnamese")
for(group in groups)
rmarkdown::render(input = "report_template.Rmd",
output_file = paste0("fact_sheets/",group,".html"),
params = list(group = group)
)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/ethnic_group_profiles/")
#render your sweet site.
rmarkdown::render_site()
setwd("~/ethnic_group_profiles/")
groups = c("Asian Indian","Bangladeshi","Bhutanese","Burmese","Cambodian",
"Chinese",
"Filipino",
"Hmong",
"Indonesian",
"Japanese",
"Korean",
"Laotian",
"Malaysian",
"Mongolian",
"Nepalese",
"Pakistani",
"Sri Lankan",
"Taiwanese",
"Thai",
"Vietnamese")
for(group in groups)
rmarkdown::render(input = "report_template.Rmd",
output_file = paste0("fact_sheets/",group,".html"),
params = list(group = group)
)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/ethnic_group_profiles/")
#render your sweet site.
rmarkdown::render_site()
setwd("~/ethnic_group_profiles/")
groups = c("Asian Indian","Bangladeshi","Bhutanese","Burmese","Cambodian",
"Chinese",
"Filipino",
"Hmong",
"Indonesian",
"Japanese",
"Korean",
"Laotian",
"Malaysian",
"Mongolian",
"Nepalese",
"Pakistani",
"Sri Lankan",
"Taiwanese",
"Thai",
"Vietnamese")
for(group in groups)
rmarkdown::render(input = "report_template.Rmd",
output_file = paste0("fact_sheets/",group,".html"),
params = list(group = group)
)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/ethnic_group_profiles/")
#render your sweet site.
rmarkdown::render_site()
setwd("~/ethnic_group_profiles/")
groups = c("Asian Indian","Bangladeshi","Bhutanese","Burmese","Cambodian",
"Chinese",
"Filipino",
"Hmong",
"Indonesian",
"Japanese",
"Korean",
"Laotian",
"Malaysian",
"Mongolian",
"Nepalese",
"Pakistani",
"Sri Lankan",
"Taiwanese",
"Thai",
"Vietnamese")
for(group in groups)
rmarkdown::render(input = "report_template.Rmd",
output_file = paste0("fact_sheets/",group,".html"),
params = list(group = group)
)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/ethnic_group_profiles/")
#render your sweet site.
rmarkdown::render_site()
setwd("~/ethnic_group_profiles/")
groups = c("Asian Indian","Bangladeshi","Bhutanese","Burmese","Cambodian",
"Chinese",
"Filipino",
"Hmong",
"Indonesian",
"Japanese",
"Korean",
"Laotian",
"Malaysian",
"Mongolian",
"Nepalese",
"Pakistani",
"Sri Lankan",
"Taiwanese",
"Thai",
"Vietnamese")
for(group in groups)
rmarkdown::render(input = "report_template.Rmd",
output_file = paste0("fact_sheets/",group,".html"),
params = list(group = group)
)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/ethnic_group_profiles/")
#render your sweet site.
rmarkdown::render_site()
setwd("~/ethnic_group_profiles/")
groups = c("Asian Indian","Bangladeshi","Bhutanese","Burmese","Cambodian",
"Chinese",
"Filipino",
"Hmong",
"Indonesian",
"Japanese",
"Korean",
"Laotian",
"Malaysian",
"Mongolian",
"Nepalese",
"Pakistani",
"Sri Lankan",
"Taiwanese",
"Thai",
"Vietnamese")
for(group in groups)
rmarkdown::render(input = "report_template.Rmd",
output_file = paste0("fact_sheets/",group,".html"),
params = list(group = group)
)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/ethnic_group_profiles/")
#render your sweet site.
rmarkdown::render_site()
setwd("~/ethnic_group_profiles/")
groups = c("Asian Indian","Bangladeshi","Bhutanese","Burmese","Cambodian",
"Chinese",
"Filipino",
"Hmong",
"Indonesian",
"Japanese",
"Korean",
"Laotian",
"Malaysian",
"Mongolian",
"Nepalese",
"Pakistani",
"Sri Lankan",
"Taiwanese",
"Thai",
"Vietnamese")
for(group in groups)
rmarkdown::render(input = "report_template.Rmd",
output_file = paste0("fact_sheets/",group,".html"),
params = list(group = group)
)
california_dta <- get_acs(state = "CA", geography = "county",
table = "B02001")
View(california_dta)
v15 <- load_variables(2015, "acs5", cache = TRUE)
View(v15)
View(v15)
View(v15)
View(california_dta)
v15 %>%   filter(name %in% california_dta$variable
v15 %>%   filter(name %in% california_dta$variable
v15 %>%filter(name %in% california_dta$variable
v15 %>%filter(name %in% california_dta$variable)
v15 %>%filter(name %in% california_dta$variable)
vars<- california_dta$variable
vars
v15 %>%filter(name %in% vars )
v15 %>%filter(name %in% "B02001_005" )
View(v15)
v15 %>% filter(str_detect(rowname, "^B02001"))
v15 %>% filter(str_detect(name, "^B02001"))
label_names <- v15 %>% filter(str_detect(name, "^B02001"))
View(label_names)
label_names <- v15 %>% filter(str_detect(name, "^B02001")) %>% filter(str_detect(name, "$M"))
View(label_names)
label_names <- v15 %>% filter(str_detect(name, "^B02001")) %>% filter(str_detect(name, "M$"))
label_names <- label_names %>% rename(name=variable)
label_names <- label_names %>% rename(variable=name)
california_dta <- california_dta %>% left_join(label_names,by = "variable")
View(california_dta)
california_dta
#acs_16 <- get_acs(geography = "state", table = "B02018",geometry = T)
california_dta <- get_acs(state = "CA", geography = "county",
table = "B02001")
library(DT)
california_dta
california_dta %>% spread(variable,NAME)
california_dta %>% spread(variable,NAME) %>%DT)_
california_dta %>% spread(variable,NAME) %>% DT()
library(DT)
california_dta %>% spread(variable,NAME) %>% datatable()
california_dta %>% spread(variable) %>% datatable()
california_dta %>% spread(variable) %>% datatable()
